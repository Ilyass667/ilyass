def process_commands_loop():
    print("Démarrage du thread de commandes...")
    def loop():
        ref = db.reference('commands')
        while True:
            print("→ Vérification commandes en cours…")
            try:
                cmds = ref.order_by_child('executed').equal_to(False).get() or {}
                for key, cmd in cmds.items():
                    print("⚡ Commande reçue :", cmd)
                    # Mode
                    if 'mode' in cmd:
                        if cmd['mode'] == 'auto':
                            test_mode_active = False
                        elif cmd['mode'] == 'test':
                            test_mode_active = True
                        window.after(0, lambda: test_mode.config(
                            text=f"Mode test : {'Activé' if test_mode_active else 'Désactivé'}"))
                    # Action
                    action = cmd.get('action', '')
                    if action == 'trap_open':
                        open_door()
                    elif action == 'trap_close':
                        close_door()
                    elif action == 'buzzer_on':
                        control_alarm_manual(True)
                    elif action == 'buzzer_off':
                        control_alarm_manual(False)
                    # Marquer exécutée
                    ref.child(key).update({'executed': True})
                    print("-> Commande marquée exécutée")
                time.sleep(5)
            except Exception as e:
                print("Erreur traitement commandes :", e)
                time.sleep(5)
    threading.Thread(target=loop, daemon=True).start()
